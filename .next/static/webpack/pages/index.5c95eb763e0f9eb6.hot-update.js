"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./src/pages/engine/chainchange.js":
/*!*****************************************!*\
  !*** ./src/pages/engine/chainchange.js ***!
  \*****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"bscChain\": function() { return /* binding */ bscChain; },\n/* harmony export */   \"bscTest\": function() { return /* binding */ bscTest; },\n/* harmony export */   \"ethChain\": function() { return /* binding */ ethChain; },\n/* harmony export */   \"ethTest\": function() { return /* binding */ ethTest; },\n/* harmony export */   \"hardChain\": function() { return /* binding */ hardChain; },\n/* harmony export */   \"hardChainb\": function() { return /* binding */ hardChainb; },\n/* harmony export */   \"polyChain\": function() { return /* binding */ polyChain; },\n/* harmony export */   \"polyTest\": function() { return /* binding */ polyTest; }\n/* harmony export */ });\nasync function bscChain() {\n    try {\n        await ethereum.request({\n            method: \"wallet_switchEthereumChain\",\n            params: [\n                {\n                    chainId: \"0x38\"\n                }\n            ]\n        });\n    } catch (switchError) {\n        if (switchError.code === 4902) {\n            try {\n                await window.ethereum.request({\n                    method: \"wallet_addEthereumChain\",\n                    params: [\n                        {\n                            chainId: \"0x38\",\n                            chainName: \"Binance Smart Chain\",\n                            nativeCurrency: {\n                                name: \"BNB\",\n                                symbol: \"BNB\",\n                                decimals: 18\n                            },\n                            rpcUrls: [\n                                \"https://bsc-dataseed2.defibit.io\"\n                            ],\n                            blockExplorerUrls: [\n                                \"https://bscscan.com/\"\n                            ]\n                        }\n                    ]\n                });\n            } catch (addError) {\n                console.log(\"Error adding Chain\");\n            }\n        }\n    }\n}\nasync function polyChain() {\n    try {\n        await ethereum.request({\n            method: \"wallet_switchEthereumChain\",\n            params: [\n                {\n                    chainId: \"0x89\"\n                }\n            ]\n        });\n    } catch (switchError) {\n        if (switchError.code === 4902) {\n            try {\n                await window.ethereum.request({\n                    method: \"wallet_addEthereumChain\",\n                    params: [\n                        {\n                            chainId: \"0x89\",\n                            chainName: \"Polygon\",\n                            nativeCurrency: {\n                                name: \"MATIC\",\n                                symbol: \"MATIC\",\n                                decimals: 18\n                            },\n                            rpcUrls: [\n                                \"https://matic-mainnet.chainstacklabs.com\"\n                            ],\n                            blockExplorerUrls: [\n                                \"https://polygonscan.com/\"\n                            ]\n                        }\n                    ]\n                });\n            } catch (addError) {\n                console.log(\"Error adding Chain\");\n            }\n        }\n    }\n}\nasync function ethChain() {\n    try {\n        await ethereum.request({\n            method: \"wallet_switchEthereumChain\",\n            params: [\n                {\n                    chainId: \"0x1\"\n                }\n            ]\n        });\n    } catch (switchError) {\n        console.log(\"Wallet Not Connected\");\n    }\n}\nasync function hardChain() {\n    try {\n        await ethereum.request({\n            method: \"wallet_switchEthereumChain\",\n            params: [\n                {\n                    chainId: \"0x7A69\"\n                }\n            ]\n        });\n    } catch (switchError) {\n        if (switchError.code === 4902) {\n            try {\n                await window.ethereum.request({\n                    method: \"wallet_addEthereumChain\",\n                    params: [\n                        {\n                            chainId: \"0x7A69\",\n                            chainName: \"HardHat\",\n                            nativeCurrency: {\n                                name: \"ETH\",\n                                symbol: \"ETH\",\n                                decimals: 18\n                            },\n                            rpcUrls: [\n                                \"http://node.a3b.io:8545\"\n                            ],\n                            blockExplorerUrls: [\n                                \"\"\n                            ]\n                        }\n                    ]\n                });\n            } catch (addError) {\n                console.log(\"Error adding Chain\");\n            }\n        }\n    }\n}\nasync function hardChainb() {\n    try {\n        await ethereum.request({\n            method: \"wallet_switchEthereumChain\",\n            params: [\n                {\n                    chainId: \"0x7A69\"\n                }\n            ]\n        });\n    } catch (switchError) {\n        if (switchError.code === 4902) {\n            try {\n                await window.ethereum.request({\n                    method: \"wallet_addEthereumChain\",\n                    params: [\n                        {\n                            chainId: \"0x7A69\",\n                            chainName: \"HardHat\",\n                            nativeCurrency: {\n                                name: \"Test\",\n                                symbol: \"Test\",\n                                decimals: 18\n                            },\n                            rpcUrls: [\n                                \"http://node.a3b.io:8546\"\n                            ],\n                            blockExplorerUrls: [\n                                \"\"\n                            ]\n                        }\n                    ]\n                });\n            } catch (addError) {\n                console.log(\"Error adding Chain\");\n            }\n        }\n    }\n}\nasync function bscTest() {\n    try {\n        await ethereum.request({\n            method: \"wallet_switchEthereumChain\",\n            params: [\n                {\n                    chainId: \"0x61\"\n                }\n            ]\n        });\n    } catch (switchError) {\n        if (switchError.code === 4902) {\n            try {\n                await window.ethereum.request({\n                    method: \"wallet_addEthereumChain\",\n                    params: [\n                        {\n                            chainId: \"0x61\",\n                            chainName: \"BSC Testnet\",\n                            nativeCurrency: {\n                                name: \"tBNB\",\n                                symbol: \"tBNB\",\n                                decimals: 18\n                            },\n                            rpcUrls: [\n                                \"https://data-seed-prebsc-1-s3.binance.org:8545\"\n                            ],\n                            blockExplorerUrls: [\n                                \"https://testnet.bscscan.com/\"\n                            ]\n                        }\n                    ]\n                });\n            } catch (addError) {\n                console.log(\"Error adding Chain\");\n            }\n        }\n    }\n}\nasync function ethTest() {\n    try {\n        await ethereum.request({\n            method: \"wallet_switchEthereumChain\",\n            params: [\n                {\n                    chainId: \"0x5\"\n                }\n            ]\n        });\n    } catch (switchError) {\n        console.log(\"Wallet Not Connected\");\n    }\n}\nasync function polyTest() {\n    try {\n        await ethereum.request({\n            method: \"wallet_switchEthereumChain\",\n            params: [\n                {\n                    chainId: \"0x13881\"\n                }\n            ]\n        });\n    } catch (switchError) {\n        if (switchError.code === 4902) {\n            try {\n                await window.ethereum.request({\n                    method: \"wallet_addEthereumChain\",\n                    params: [\n                        {\n                            chainId: \"0x13881\",\n                            chainName: \"Polygon Mumbai\",\n                            nativeCurrency: {\n                                name: \"MATIC\",\n                                symbol: \"MATIC\",\n                                decimals: 18\n                            },\n                            rpcUrls: [\n                                \"https://matic-mumbai.chainstacklabs.com\"\n                            ],\n                            blockExplorerUrls: [\n                                \"https://mumbai.polygonscan.com/\"\n                            ]\n                        }\n                    ]\n                });\n            } catch (addError) {\n                console.log(\"Error adding Chain\");\n            }\n        }\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/pages/engine/chainchange.js\n"));

/***/ })

});